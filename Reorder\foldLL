class Solution {
public:
    ListNode*midnode(ListNode*head){
        if(head==NULL || head->next== NULL){
            return head;
        }
        ListNode*slow=head;
         ListNode*fast=head;
        while(fast->next!=NULL && fast->next->next!=NULL){
            slow=slow->next;
            fast=fast->next->next;     
        }
        return slow;
    }
    
    ListNode*reverse(ListNode*head){
          if(head==NULL || head->next== NULL){
            return head;
        }
        ListNode*prev=NULL;
        ListNode*curr=head;
        ListNode*next=NULL;
        while(curr!=NULL){
            next=curr->next;
            curr->next=prev;
            prev=curr;
            curr=next;           
        }
        head=prev;
        return head;    
    }
    
     void reorderList(ListNode* head) {
         if(head==NULL || head->next== NULL){
            return;  
    }
         ListNode*mid=midnode(head);
         ListNode*newhead=mid->next;
         mid->next=NULL;
         newhead=reverse(newhead);
         
         ListNode*c1=head;
         ListNode*c2=newhead;
         ListNode*f1=NULL;
         ListNode*f2=NULL;

         while(c1!=NULL && c2!=NULL){
             
            
                 f1=c1->next;
                 f2=c2->next;
             
                 c1->next=c2;
                 c2->next=f1;
   
                 c1=f1;
                 c2=f2;       
         }  
         return;
     }   
};
